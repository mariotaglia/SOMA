@SOMA_PYTHON_SHEBANG@

#   Copyright (C) 2016-2021 Ludwig Schneider
#
# This file is part of SOMA.
#
# SOMA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SOMA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with SOMA.  If not, see <http://www.gnu.org/licenses/>.

import h5py
import numpy as np

def process_mobility_ana(filename):
    with h5py.File(filename, "r") as file_handle:
        msd_data = file_handle["MSD"][:]

        tmp = msd_data[:, 7]
        msd_a = np.mean(tmp/(np.arange(len(tmp))+1))
        tmp = msd_data[:, 15]
        msd_b = np.mean(tmp/(np.arange(len(tmp))+1))

        acc_ratio = np.mean(file_handle["acc_ratio"][:])

    return msd_a, msd_b, acc_ratio

MSD_A_HIGH, MSD_B_HIGH, ACC_HIGH = process_mobility_ana("mobility_high_concentration_ana.h5")
print(MSD_A_HIGH, MSD_B_HIGH, ACC_HIGH)
MSD_A_LOW, MSD_B_LOW, ACC_LOW = process_mobility_ana("mobility_low_concentration_ana.h5")
print(MSD_A_LOW, MSD_B_LOW, ACC_LOW)

#Use >= for MSD since this should also detect missing MSD values, that always report 0
if MSD_A_HIGH <= 1.5* MSD_A_LOW:
    raise RuntimeError("A mobility in low concentration not signigicantly higher than in high concentration.")
if MSD_B_HIGH <= 1.5* MSD_B_LOW:
    raise RuntimeError("B mobility in low concentration not signigicantly higher than in high concentration.")

#second test of the poly_type_mc_freq
if MSD_B_HIGH >= 1.5*MSD_A_HIGH:
    raise RuntimeError("B mobility in high concentration not signigicantly lower.")

if MSD_B_LOW >= 1.5*MSD_A_LOW:
    raise RuntimeError("B mobility in low concentration not signigicantly lower.")


if ACC_HIGH < ACC_LOW: #In case of GPU runs, acc_ratio is not reported -> ">" instead of ">="
    raise RuntimeError("Acceptance ration in low concentration not higher.")
